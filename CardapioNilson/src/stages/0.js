// 0.js
import { STAGES } from './index.js';
import { getCurrentHour } from '../utils.js';
import { storage } from '../storage.js';
import { menu } from '../menu.js';

export const initialStage = {
  async exec({ from, venombot }) {
    storage[from].stage = STAGES.CHOOSE_MEAL_TYPE;

    const hour = getCurrentHour();
    let message;

    if (hour >= 9 && hour < 23) {
      message = `üëã Ol√°! O churrasquinho e frango assado do Nilson est√° aberto üçñ. *TEMOS ALMO√áO!!!*
      
üçΩÔ∏è Escolha o tipo de refei√ß√£o:
1Ô∏è‚É£ - Almo√ßo
2Ô∏è‚É£ - Quentinha
0Ô∏è‚É£ - Falar com atendente`;
    } else {
      message = `üëã Ol√°! O churrasquinho e frango assado do Nilson est√° aberto üçñ. 
üî•Card√°pio de Churrasco, Bebidas e outros itens:
1Ô∏è‚É£ - Churrasco;
2Ô∏è‚É£ - Bebidas;
0Ô∏è‚É£ - Falar com atendente`;
    }
    
    await venombot.sendText({ to: from, message });
  },
};

// chooseMealTypeStage.js
export const chooseMealTypeStage = {
  async exec({ from, message, venombot }) {
    const selectedOption = message.trim();

    if (selectedOption === '1' || selectedOption === '2') {
      const mealType = selectedOption === '1' ? 'Almo√ßo' : 'Quentinha';
      storage[from].stage = STAGES.MENU_LUNCH;

      let menuMessage = `Voc√™ escolheu ${mealType}. Aqui est√° o menu:\n\n`;

      Object.keys(menu).forEach((key) => {
        if (menu[key].available) {
          menuMessage += `${key} - ${menu[key].description}\n`;
        }
      });

      // Informa√ß√£o sobre sele√ß√£o m√∫ltipla
      menuMessage += '\nLembre-se: Se for necess√°rio inserir mais de uma op√ß√£o, basta apenas separar o pedido por v√≠rgula (Ex.: 1,2)';

      await venombot.sendText({ to: from, message: menuMessage });
    } else if (selectedOption === '0') {
      storage[from].stage = STAGES.FALAR_COM_ATENDENTE;
      await venombot.sendText({ to: from, message: 'Encaminhando voc√™ para um atendente.' });
    } else {
      storage[from].stage = STAGES.FALAR_COM_ATENDENTE;
      await venombot.sendText({ to: from, message: 'Op√ß√£o inv√°lida. Encaminhando voc√™ para um atendente.' });
    }
  },
};

// menuLunchStage.js
export const menuLunchStage = {
  async exec({ from, message, venombot }) {
    const selectedOptions = message.trim().split(','); // Separar as sele√ß√µes por v√≠rgula
    let confirmationMessages = '';

    selectedOptions.forEach(async (selectedOption) => {
      const menuItem = menu[selectedOption.trim()]; // Trim para remover espa√ßos em branco
      
      if (menuItem && menuItem.available) {
        // Item do menu selecionado e dispon√≠vel
        confirmationMessages += `‚úÖ ${menuItem.description} adicionado com sucesso!\n`;
      } else {
        // Item do menu inv√°lido ou indispon√≠vel
        confirmationMessages += `‚ùå Op√ß√£o inv√°lida ou indispon√≠vel para ${selectedOption.trim()}.\n`;
      }
    });

    // Envia a confirma√ß√£o das sele√ß√µes ap√≥s processar todas as sele√ß√µes
    await venombot.sendText({ to: from, message: confirmationMessages });

    // Adiciona novamente as op√ß√µes do menu ap√≥s cada sele√ß√£o
    let menuMessage = 'Aqui est√° o menu:\n\n';
    Object.keys(menu).forEach((key) => {
      if (menu[key].available) {
        menuMessage += `${key} - ${menu[key].description}\n`;
      }
    });
    
    // Informa√ß√£o sobre sele√ß√£o m√∫ltipla
    menuMessage += '\nLembre-se: Se for necess√°rio inserir mais de uma op√ß√£o, basta apenas separar o pedido por v√≠rgula (Ex.: 1,2)';

    await venombot.sendText({ to: from, message: menuMessage });
  },
};


export const menuStage = {
  async exec({ from, venombot }) {
    // L√≥gica para apresentar o card√°pio de churrasco e bebidas
  },
};

export const falarComAtendenteStage = {
  async exec({ from, venombot }) {
    // L√≥gica para falar com um atendente
  },
};
